package de.markusressel.kutepreferences.demo.preferences.custom

import android.graphics.Color
import androidx.annotation.ColorInt
import androidx.annotation.StringRes
import com.airbnb.epoxy.EpoxyModel
import com.eightbitlab.rxbus.Bus
import de.markusressel.kutepreferences.core.HighlighterFunction
import de.markusressel.kutepreferences.core.KutePreferenceListItem
import de.markusressel.kutepreferences.core.event.RefreshPreferenceItemsEvent
import de.markusressel.kutepreferences.demo.CustomPreferenceItemBindingModel_

/**
 * Sample implementation of a custom preference item
 */
class CustomPreferenceItem(
        @StringRes
        override val key: Int
) : KutePreferenceListItem {

    @ColorInt
    var backgroundColor = Color.BLUE

    override fun createEpoxyModel(highlighterFunction: HighlighterFunction): EpoxyModel<*> {
        // Create an instance of your custom data model based on constructor parameters
        // and other values
        val viewModel = CustomDataModel(
                backgroundColor = backgroundColor,
                onClick = {
                    val red = (0..255).random()
                    val green = (0..255).random()
                    val blue = (0..255).random()
                    backgroundColor = Color.rgb(red, green, blue)

                    // send this event to trigger a recreation of all list item models
                    // which will result in a GUI update
                    Bus.send(RefreshPreferenceItemsEvent())
                }
        )
        // Create an instance of your modelbinding class (generated by epoxy-processor)
        // and pass your data model instance to it
        return CustomPreferenceItemBindingModel_().viewModel(viewModel)
    }

    override fun getSearchableItems(): Set<String> {
        // return a list of text items that shall be found by the search
        // keep in mind to **always** use the highlighterFunction for those texts
        // in your data model. This will ensure the text is highlighted.
        return emptySet()
    }

}